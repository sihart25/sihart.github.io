To demonstrate, let's use `module list`. `module list` shows all loaded
software modules.

```
{{ site.host_prompt }} module list
```
{: .language-bash}
```


Currently Loaded Modules:
 1) GCCcore/11.3.0   3) binutils/2.38   5) ncurses/6.3         7) Tcl/8.6.12      9) XZ/5.2.5   11) libffi/3.4.2  13) Python/3.10.4
  2) zlib/1.2.12      4) bzip2/1.0.8     6) libreadline/8.1.2   8) SQLite/3.38.3  10) GMP/6.2.1  12) OpenSSL/1.1

```
{: .output}

```
{{ site.host_prompt }} module load GCC/10.2.0  CUDA/11.1.1  OpenMPI/4.0.5 GROMACS/2021.2
{{ site.host_prompt }} module list
```
{: .language-bash}

```

Due to MODULEPATH changes, the following have been reloaded:
  1) XZ/5.2.5     2) bzip2/1.0.8

The following have been reloaded with a version change:
  1) GCCcore/11.3.0 => GCCcore/10.2.0     3) Python/3.10.4 => Python/3.8.6      5) Tcl/8.6.12 => Tcl/8.6.10           7) libffi/3.4.2 => libffi/3.3               9) ncurses/6.3 => ncurses/6.2
  2) GMP/6.2.1 => GMP/6.2.0               4) SQLite/3.38.3 => SQLite/3.33.0     6) binutils/2.38 => binutils/2.35     8) libreadline/8.1.2 => libreadline/8.0    10) zlib/1.2.12 => zlib/1.2.11


```
{: .output}

So in this case, loading the `GROMACS` module (a molecular dynamics software
package), also loaded `CUDA/11.1.1` and `UCX/1.9.0-CUDA-11.1.1` as
well. Let's try unloading the `GROMACS` package.

```
{{ site.host_prompt }} module unload GCC/10.2.0  CUDA/11.1.1  OpenMPI/4.0.5 GROMACS/2021.2
{{ site.host_prompt }} module list
```
{: .language-bash}

```

Currently Loaded Modules:
  1) OpenSSL/1.1       4) numactl/2.0.13      7) hwloc/2.2.0      10) GDRCopy/2.1-CUDA-11.1.1  13) PMIx/3.1.5     16) libreadline/8.0  19) SQLite/3.33.0  22) Python/3.8.6    25) XZ/5.2.5
  2) GCCcore/10.2.0    5) libxml2/2.9.10      8) libevent/2.1.12  11) UCX/1.9.0-CUDA-11.1.1    14) binutils/2.35  17) zlib/1.2.11      20) GMP/6.2.0      23) pybind11/2.6.0
  3) CUDAcore/11.1.1   6) libpciaccess/0.16   9) Check/0.15.2     12) libfabric/1.11.0         15) ncurses/6.2    18) Tcl/8.6.10       21) libffi/3.3     24) bzip2/1.0.8

Inactive Modules:
  1) OpenBLAS/0.3.12   2) FFTW/3.3.8   3) ScaLAPACK/2.1.0   4) SciPy-bundle/2020.11   5) networkx/2.5


```
{: .output}

So using `module unload` "un-loads" a module along with its dependencies. If we
wanted to unload everything at once, we could run `module purge` (unloads
everything).

```
{{ site.host_prompt }} module purge
```
{: .language-bash}
```
```
{: .output}

Note that `module purge` is informative. It lets us know that all but a default
set of packages have been unloaded (and how to actually unload these if we
truly so desired).
